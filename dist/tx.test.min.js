(function () {
  'use strict';

  angular
    .module('tx.test', ['ui.bootstrap', 'ngRoute']);

})();

(function () {
  'use strict';

  angular
    .module('tx.test')
    .config(function ($locationProvider, $routeProvider) {

      $routeProvider
        .when('/users', {
          template:'<div class="row" ng-controller="ListUserController as vm"><div class="col-md-2 item-user__box" ng-repeat="userItem in vm.users.slice(((vm.currentPage-1)*vm.maxSize), ((vm.currentPage)*vm.maxSize)) track by $index"><item-user user="userItem"></item-user></div><div class="col-md-2 item-user__button"><button class="btn btn-default" ng-click="vm.setPage(1)">Next</button></div><div class="clearfix"></div><ul ng-show="false" uib-pagination total-items="vm.users.length" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul></div>'
        })
        .when('/repositories/:user_login/:page', {
          template:'<div class="row"><h2>Current Page: {{vm.currentPage}}</h2><div class="col-md-2 item-user__box" ng-repeat="repoItem in vm.repos.slice(((vm.currentPage-1)*vm.maxSize), ((vm.currentPage)*vm.maxSize)) track by $index"><item-repo repo="repoItem"></item-repo></div><div class="clearfix"></div><div class="col-md-12"><ul uib-pagination items-per-page="vm.maxSize" total-items="vm.repos.length" ng-model="vm.currentPage" max-size="vm.maxSize" ng-change="vm.pageChanged()" boundary-links="true" rotate="false" class="pagination-sm"></ul></div></div>',
          controller: 'ListRepositoryController',
          controllerAs: 'vm',
          reloadOnSearch: false
        })
        .otherwise({redirectTo: '/users'});

    });
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .constant('TX_TEST_URL', {url: 'https://api.github.com'});
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('httpService', httpService);

  httpService.$inject = ['$http'];
  
  function httpService($http) {

    var service = {
      httpPost: httpPost,
      httpGet: httpGet,
      httpPut: httpPut
    };

    return service;

    function httpPost(url, data, options) {
      if(options === undefined) {
        options = {};
      }
      
      return $http.post(url, data, options)
        .then(
          function (response) {
            return successResponse(response);
          },
          function (response) {
            return errorResponse(response);
          }
        );
    }

    function httpGet(url, options) {
      if (options === undefined) {
        options = {};
      }

      return $http.get(url, options)
        .then(
          function (response) {
            return successResponse(response);
          },
          function (response) {
            return errorResponse(response);
          }
        );
    }

    function httpPut(url, data, options) {
      if (options === undefined) {
        options = {};
      }

      return $http.put(url, data, options)
        .then(
          function (response) {
            return successResponse(response);
          },
          function (response) {
            return errorResponse(response);
          }
        );
    }

    function successResponse(response) {
      return response.data;
    }

    function errorResponse(response) {
      return response.data || 'Request Failed';
    }
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('txLocation', txLocation);

  txLocation.$inject = ['$location', '$rootScope', '$route'];

  function txLocation($location, $rootScope, $route) {

    $location.skipReload = function() {
      var lastRoute = $route.current;
      var un = $rootScope.$on('$locationChangeSuccess', function () {
        $route.current = lastRoute;
        un();
      });
      return $location;
    };

    return $location;
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .component('itemRepo', {
      controller: 'ItemRepoController',
      controllerAs: 'vm',
      bindings: {
        repo: '<'
      },
      template:'<div class="row"><div class="col-md-12"><h4>{{vm.repo.name}}</h4></div><div class="col-md-12"><a href="{{vm.repo.html_url}}">GitHub page</a></div><div class="col-md-12"><p>{{vm.repo.description}}</p></div><div class="col-md-12">Number of:</div><div class="col-md-12"><ul><li>Issues: {{vm.repo.open_issues}}</li><li>Open Issues:{{vm.repo.open_issues_count}}</li><li>Forks: {{vm.repo.forks_count}}</li></ul></div></div>'
    });
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .controller('ItemRepoController', ItemRepoController);

  ItemRepoController.$inject = [];
  
  function ItemRepoController() {
    var vm = this;

  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('itemRepoService', itemRepoService);

  itemRepoService.$inject = [];

  function itemRepoService() {
    
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .component('itemUser', {
      controller: 'ItemUserController',
      controllerAs: 'vm',
      bindings: {
        user: '<'
      },
      template:'<div class="row"><div class="col-md-5"><img ng-if="vm.user.avatar_url !== undefined || vm.user.avatar_url !== \'\'" src="{{vm.user.avatar_url}}" width="90%" class="item-user__img"> <img ng-if="vm.user.avatar_url === undefined || vm.user.avatar_url === \'\'" src="/app/assets/img/default.png" width="90%" class="item-user__img"></div><div class="col-md-5 item-user__name"><div class="col-md-12">{{vm.user.login}}</div><div class="item-user__links"><div class="raw"><a href="{{vm.user.html_url}}" target="_blank">My page</a></div><div class="raw"><a href="#!/repositories/{{vm.user.login}}/1" ng-click="vm.goToRepos(vm.user.login)">My repositories</a></div></div></div></div>'
    });
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .controller('ItemUserController', ItemUserController);

  ItemUserController.$inject = [];
  
  function ItemUserController() {
    var vm = this;

  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('itemUserService', itemUserService);

  itemUserService.$inject = [];

  function itemUserService() {
    
  }
})();
(function () {
  'use strict';
  
  angular
    .module('tx.test')
    .controller('ListRepositoryController', ListRepositoryController);

  ListRepositoryController.$inject = ['listRepoService', '$routeParams', 'txLocation'];

  function ListRepositoryController(listRepoService, $routeParams, txLocation) {
    var vm = this;
    vm.repos = [];
    vm.currentPage = $routeParams.page;
    vm.maxSize = 4;
    vm.totalItems = vm.repos.length;

    vm.init = init;
    vm.getAllRepos = getAllRepos;
    vm.pageChanged = pageChanged;
    vm.setPage = setPage;

    function pageChanged() {
      txLocation.skipReload().path('/repositories/'+$routeParams.user_login+'/'+vm.currentPage).replace();
    }

    function init() {
      vm.getAllRepos();
    }

    function getAllRepos() {
      listRepoService.getRepos($routeParams.user_login)
        .then(function (response) {
          vm.repos = response;
          vm.setPage($routeParams.page);
          vm.pageChanged();
        });
    }
    
    function setPage(numberPage) {
      vm.currentPage = numberPage;
    }

    vm.init();
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('listRepoService', listRepoService);

  listRepoService.$inject = ['httpService', 'TX_TEST_URL'];

  function listRepoService(httpService, TX_TEST_URL) {
    var service = {
      getRepos: getRepos
    };

    return service;

    function getRepos(user) {
      return httpService.httpGet(TX_TEST_URL.url + '/users/' + user + '/repos');
    }
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .controller('ListUserController', ListUserController);

  ListUserController.$inject = ['listUserService'];
  
  function ListUserController(listUserService) {
    var vm = this;
    vm.users = [];
    vm.currentPage = 1;
    vm.maxSize = 4;
    vm.totalItems = vm.users.length;

    vm.$onInit = onInit;
    vm.getAllUsers = getAllUsers;
    vm.pageChanged = pageChanged;
    vm.setPage = setPage;

    function pageChanged() {

    }

    function onInit() {
      getAllUsers();
    }
    
    function getAllUsers() {
      listUserService.getUsers()
        .then(function (response) {
          vm.users = response;
      });
    }

    function setPage(numPage) {
      var end = vm.users.length/vm.maxSize;
      if(end < vm.currentPage) {
        vm.currentPage = 0;
      }
      if(numPage)
      vm.currentPage = vm.currentPage + numPage;
    }
  }
})();
(function () {
  'use strict';
  
  angular
    .module('tx.test')
    .service('listUserService', listUserService);

  listUserService.$inject = ['httpService', 'TX_TEST_URL'];
  
  function listUserService(httpService, TX_TEST_URL) {
    var USERS_URL = '/users';

    var service = {
      getUsers: getUsers
    };

    return service;
    
    function getUsers() {
      return httpService.httpGet(TX_TEST_URL.url + USERS_URL);
    }
  }
})();