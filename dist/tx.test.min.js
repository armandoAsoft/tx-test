(function () {
  'use strict';

  angular
    .module('tx.test', ['ui.bootstrap', 'ngRoute']);

})();

(function () {
  'use strict';

  angular
    .module('tx.test')
    .config(function ($locationProvider, $routeProvider) {

      $locationProvider.html5Mode({
        enabled: true,
        requireBase: false
      });

      $routeProvider
        .when('/', {
          template:'<div class="row" ng-controller="ListUserController as vm"><div class="col-md-2 item-user__box" ng-repeat="userItem in vm.users.slice(((vm.currentPage-1)*vm.maxSize), ((vm.currentPage)*vm.maxSize)) track by $index"><item-user user="userItem"></item-user></div><div class="col-md-2 item-user__button"><button class="btn btn-default" ng-click="vm.setPage(1)">Next</button></div><div class="clearfix"></div><ul ng-show="false" uib-pagination total-items="vm.users.length" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul></div>'
        })
        .when('/item-list-repository', {
          template:'<div>LIST REPOSITORY</div>'
        })
        .otherwise({redirectTo: '/'});
    });
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .constant('TX_TEST_URL', {url: 'https://api.github.com'});
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('httpService', httpService);

  httpService.$inject = ['$http'];
  
  function httpService($http) {

    var service = {
      httpPost: httpPost,
      httpGet: httpGet,
      httpPut: httpPut
    };

    return service;

    function httpPost(url, data, options) {
      if(options === undefined) {
        options = {};
      }
      
      return $http.post(url, data, options)
        .then(
          function (response) {
            return successResponse(response);
          },
          function (response) {
            return errorResponse(response);
          }
        );
    }

    function httpGet(url, options) {
      if (options === undefined) {
        options = {};
      }

      return $http.get(url, options)
        .then(
          function (response) {
            return successResponse(response);
          },
          function (response) {
            return errorResponse(response);
          }
        );
    }

    function httpPut(url, data, options) {
      if (options === undefined) {
        options = {};
      }

      return $http.put(url, data, options)
        .then(
          function (response) {
            return successResponse(response);
          },
          function (response) {
            return errorResponse(response);
          }
        );
    }

    function successResponse(response) {
      return response.data;
    }

    function errorResponse(response) {
      return response.data || 'Request Failed';
    }
  }
})();
(function () {
  'use strict';
  
  angular
    .module('tx.test')
    .controller('ListRepositoryController', ListRepositoryController);

  ListRepositoryController.$inject = [];

  function ListRepositoryController() {
    
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .controller('ListUserController', ListUserController);

  ListUserController.$inject = ['listUserService'];
  
  function ListUserController(listUserService) {
    var vm = this;
    vm.users = [];
    vm.currentPage = 1;
    vm.maxSize = 4;
    vm.totalItems = vm.users.length;

    vm.$onInit = onInit;
    vm.getAllUsers = getAllUsers;
    vm.pageChanged = pageChanged;
    vm.setPage = setPage;

    function pageChanged() {

    }

    function onInit() {
      getAllUsers();
    }
    
    function getAllUsers() {
      listUserService.getUsers()
        .then(function (response) {
          vm.users = response;
      });
    }

    function setPage(numPage) {
      var end = vm.users.length/vm.maxSize;
      if(end < vm.currentPage) {
        vm.currentPage = 0;
      }
      if(numPage)
      vm.currentPage = vm.currentPage + numPage;
    }
  }
})();
(function () {
  'use strict';
  
  angular
    .module('tx.test')
    .service('listUserService', listUserService);

  listUserService.$inject = ['httpService', 'TX_TEST_URL'];
  
  function listUserService(httpService, TX_TEST_URL) {
    var service = {
      getUsers: getUsers
    };

    return service;
    
    function getUsers() {
      return httpService.httpGet(TX_TEST_URL.url + '/users');
    }
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .component('itemUser', {
      controller: 'ItemUserController',
      controllerAs: 'vm',
      bindings: {
        user: '<'
      },
      template:'<div class="row"><div class="col-md-5"><img ng-if="vm.user.avatar_url !== undefined || vm.user.avatar_url !== \'\'" src="{{vm.user.avatar_url}}" width="90%" class="item-user__img"> <img ng-if="vm.user.avatar_url === undefined || vm.user.avatar_url === \'\'" src="/app/assets/img/default.png" width="90%" class="item-user__img"></div><div class="col-md-5 item-user__name"><div class="col-md-12">{{vm.user.login}}</div><div class="item-user__links"><div class="raw"><a href="{{vm.user.html_url}}" target="_blank">My page</a></div><div class="raw"><a href="{{vm.user.repos_url}}">My repositories</a></div></div></div></div>'
    });
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .controller('ItemUserController', ItemUserController);

  ItemUserController.$inject = [];
  
  function ItemUserController() {
    var vm = this;

    console.log('userrrrrr', vm);
  }
})();
(function () {
  'use strict';

  angular
    .module('tx.test')
    .service('itemUserService', itemUserService);

  itemUserService.$inject = [];

  function itemUserService() {
    
  }
})();